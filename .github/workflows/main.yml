name: Deploy Acumatica Package

on:
  repository_dispatch:
    types: [trigger-deployment]  
  workflow_dispatch:
    inputs:
      versionName:
        description: "Customization Folder Name"
        required: true

run-name: Deploy Acumatica Package - ${{ github.event.inputs.versionName }}

jobs:
  build_and_deploy_to_dev:
    runs-on: self-hosted

    steps:
      - name: Checkout CI/CD Repository
        uses: actions/checkout@v4

      - name: Extract Customization Version from Input
        shell: pwsh
        run: |
          echo "VERSION_NAME=${{ github.event.inputs.versionName }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

      # - name: Extract Version from Tag
      #   if: startsWith(github.ref, 'refs/tags/')
      #   shell: pwsh
      #   run: |
      #     $versionName = "${{ github.ref }}".Replace('refs/tags/', '')
      #     echo "VERSION_NAME=$versionName" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

      # - name: Checkout Customization Repository
      #   uses: actions/checkout@v4
      #   with:
      #     repository: ZingworksChetan/acumatica-customization
      #     ref: main
      #     fetch-depth: 1
      #     path: acumatica-customization

      # - name: Detect New Customization Folder
      #   shell: pwsh
      #   run: |
      #     $latestFolder = (git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | Where-Object { $_ -match "^Customization/[^/]+/$" }) -replace "^Customization/", "" -replace "/$",""
      #     if (-Not $latestFolder) {
      #       Write-Error "No new customization folder detected!"; exit 1
      #     }
      #     echo "VERSION_NAME=$latestFolder" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

      - name: Fetch Only Required Customization Folder
        shell: pwsh
        run: |
          $escapedFolder = "Customization/${{ env.VERSION_NAME }}" -replace '\[', '\[' -replace '\]', '\]'
          git init acumatica-customization
          cd acumatica-customization
          git remote add origin https://github.com/ZingworksChetan/acumatica-customization.git
          git config core.sparseCheckout true
          echo $escapedFolder | Out-File -FilePath .git/info/sparse-checkout -Encoding utf8
          git pull origin main --depth=1
          if (-Not (Test-Path "acumatica-customization/Customization/${{ env.VERSION_NAME }}")) {
          Write-Error "Customization folder '${{ env.VERSION_NAME }}' does not exist!"; exit 1
          }

      - name: Set Up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
     
      - name: Build CustomizationPackageTools.exe
        run: |
          cd CustomizationPackageTools
          dotnet build --configuration Release
          cd ..
        shell: pwsh

      - name: Verify Customization Folder Exists
        shell: pwsh
        run: |
          $customizationPath = "${{ github.workspace }}/acumatica-customization/Customization/${{ env.VERSION_NAME }}"
          if (-Not (Test-Path $customizationPath)) {
            Write-Error "Customization folder '$customizationPath' does not exist!"; exit 1
          }

      - name: Run Build Customization
        shell: pwsh
        run: |
          cd "${{ github.workspace }}"
          ./buildCustomization.ps1 "${{ env.VERSION_NAME }}"

      - name: Run Publish Customization
        shell: pwsh
        env:
          ACUMATICA_URL: ${{ secrets.ACUMATICA_DEV_URL }}
          ACUMATICA_USERNAME: ${{ secrets.ACUMATICA_DEV_USERNAME }}
          ACUMATICA_PASSWORD: ${{ secrets.ACUMATICA_DEV_PASSWORD }}
        run: |
          ./publishCustomization.ps1 "${{ env.VERSION_NAME }}"

      - name: Upload ZIP Artifact
        uses: actions/upload-artifact@v4
        with:
          name: acumatica-customization-${{ env.VERSION_NAME }}
          path: acumatica-customization/Customization/${{ env.VERSION_NAME }}/*.zip

  promote_to_qa:
    needs: build_and_deploy_to_dev
    runs-on: self-hosted
    environment:
      name: qa

    steps:
      - name: Download ZIP Artifact
        uses: actions/download-artifact@v4
        with:
          name: acumatica-customization-${{ github.event.inputs.versionName }}

      - name: Run Publish to QA
        shell: pwsh
        env:
          ACUMATICA_URL: ${{ secrets.ACUMATICA_QA_URL }}
          ACUMATICA_USERNAME: ${{ secrets.ACUMATICA_QA_USERNAME }}
          ACUMATICA_PASSWORD: ${{ secrets.ACUMATICA_QA_PASSWORD }}
        run: |
          ./publishCustomization.ps1 "${{ github.event.inputs.versionName }}"

  promote_to_stage:
    needs: promote_to_qa
    runs-on: self-hosted
    environment:
      name: stage

    steps:
      - name: Download ZIP Artifact
        uses: actions/download-artifact@v4
        with:
          name: acumatica-customization-${{ github.event.inputs.versionName }}

      - name: Run Publish to Stage
        shell: pwsh
        env:
          ACUMATICA_URL: ${{ secrets.ACUMATICA_STAGE_URL }}
          ACUMATICA_USERNAME: ${{ secrets.ACUMATICA_STAGE_USERNAME }}
          ACUMATICA_PASSWORD: ${{ secrets.ACUMATICA_STAGE_PASSWORD }}
        run: |
          ./publishCustomization.ps1 "${{ github.event.inputs.versionName }}"

  promote_to_prod:
    needs: promote_to_stage
    runs-on: self-hosted
    environment:
      name: prod

    steps:
      - name: Download ZIP Artifact
        uses: actions/download-artifact@v4
        with:
          name: acumatica-customization-${{ github.event.inputs.versionName }}

      - name: Run Publish to Stage
        shell: pwsh
        env:
          ACUMATICA_URL: ${{ secrets.ACUMATICA_PROD_URL }}
          ACUMATICA_USERNAME: ${{ secrets.ACUMATICA_PROD_USERNAME }}
          ACUMATICA_PASSWORD: ${{ secrets.ACUMATICA_PROD_PASSWORD }}
        run: |
          ./publishCustomization.ps1 "${{ github.event.inputs.versionName }}"